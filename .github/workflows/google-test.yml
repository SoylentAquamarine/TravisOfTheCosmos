name: Google Test

on:
  workflow_dispatch:

jobs:
  test-google:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

      - name: Test Google APIs
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        run: |
          python - <<'EOF'
          import os
          from google.oauth2.credentials import Credentials
          from googleapiclient.discovery import build

          creds = Credentials(
              None,
              refresh_token=os.environ["GOOGLE_REFRESH_TOKEN"],
              client_id=os.environ["GOOGLE_CLIENT_ID"],
              client_secret=os.environ["GOOGLE_CLIENT_SECRET"],
              token_uri="https://oauth2.googleapis.com/token"
          )

          # Drive test
          drive = build("drive", "v3", credentials=creds)
          files = drive.files().list(pageSize=5, fields="files(id, name)").execute()
          print("Drive files:", [f["name"] for f in files.get("files", [])])

          # Calendar test
          cal = build("calendar", "v3", credentials=creds)
          events = cal.events().list(calendarId="primary", maxResults=5).execute()
          print("Calendar events:", [e["summary"] for e in events.get("items", []) if "summary" in e])

          # Gmail test
          gmail = build("gmail", "v1", credentials=creds)
          profile = gmail.users().getProfile(userId="me").execute()
          print("Gmail address:", profile["emailAddress"])
          EOF
